Hello Git.

$mkdir dir//创建一个空目录

$cd dir//进入创建的空目录

$git init//将创建的目录变成Git可以管理的仓库

$git add file//将文件添加到Git暂存区

$git status//查看暂存区

$git commit -m "some modified records"//将暂存区中的改动提交到仓库

$git log//显示从最近到最远的提交记录
	git log --pretty=oneline//git log的简约版本

$git reset --hard HEAD^//回退到上一个版本；HEAD表示当前版本
	git reset --hard commitid//回退到指定的版本
	
$git reflog//记录每一次命令

$git diff HEAD -- filename//提交后，使用此命令查看工作区与版本库中最新版本的区别

$git checkout -- file//撤销工作区的全部修改

$git reset HEAD -- file//撤销暂存区，将暂存区的修改清除

$git rm file//删除文件，该命令相当于：删除文件->git add

$git branch//查看分支，git会在当前分支前用“*”以示区分

$git branch <name>//创建分支

$git checkout -b <name>//创建并切换到目标分支

$git checkout <name>//切换分支

$git merge <name>//将分支name合并至当前分支上

$git branch -d <name>//删除分支name

$git remote add origin https://github.com/repositoryPath//将本地仓库与远程仓库<origin>关联

$git push -u origin master//用于首次推送分支，

$git push origin master//将本地分支的最新修改推送到GitHub

$git log --graph --pretty=oneline --abbrev-commit//用于查看分支的合并情况

$git push origin :<branch>//该命令用于删除远程仓库"origin"中的分支"branch"
